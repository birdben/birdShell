input {
    kafka {
        # 指定Zookeeper集群地址
        zk_connect => "hadoop1:2181,hadoop2:2181,hadoop3:2181"
        # 指定当前消费者的group_id，group_id不能和其他logstash消费者相同，否则同时启动多个Logstash消费者offset会被覆盖
        group_id => "logstash_go"
        # 指定消费的Topic
        topic_id => "go_log"
        # 指定消费的内容类型（默认是json）
        codec => "json"
        # 设置Consumer消费者从Kafka最开始的消息开始消费，必须结合"auto_offset_reset => smallest"一起使用
        reset_beginning => true
        # 设置如果Consumer消费者还没有创建offset或者offset非法，从最开始的消息开始消费还是从最新的消息开始消费
        auto_offset_reset => "smallest"
    }
}

filter {
    if [type] in ["go_rpserver", "go_rpproxy"] {
        grok {
            match => {
                "message" => "%{GO_LOGS}"
            }
            remove_field => ["sss", "space", "message"]
        }
        date {
            match => ["timestamp", "MMdd HH:mm:ss.SSS"]
            target => "@timestamp"
        }
        if "_grokparsefailure" in [tags] {
            drop { }
        }
    }
    if [type] == "go_access" {
        grok {
            match => {
                "message" => "%{GO_ACCESS_LOGS}"
            }
        }
        date {
            match => ["timestamp", "YYYY/MM/dd HH:mm:ss"]
            target => "@timestamp"
        }
        if "_grokparsefailure" in [tags] {
            drop { }
        }
    }
}

output {
    stdout {
        codec => rubydebug
    }
    if [type] in ["go_rpserver", "go_rpproxy"] {
        elasticsearch {
            codec => "json"
            hosts => ["hadoop1:9200", "hadoop2:9200", "hadoop3:9200"]
            index => "go_logs_index_%{+YYYY.MM.dd}"
            document_type => "%{type}"
            template => "/usr/local/elasticsearch/template/go_logs_template.json"
            template_name => "go_logs_template"
            template_overwrite => true
            workers => 1
            flush_size => 20000
            idle_flush_time => 10
        }
    }
    if [type] == "go_access" {
        elasticsearch {
            codec => "json"
            hosts => ["hadoop1:9200", "hadoop2:9200", "hadoop3:9200"]
            index => "go_access_logs_index_%{+YYYY.MM.dd}"
            document_type => "%{type}"
            template => "/usr/local/elasticsearch/template/go_access_logs_template.json"
            template_name => "go_access_logs_template"
            template_overwrite => true
            workers => 1
            flush_size => 20000
            idle_flush_time => 10
        }
    }
}
