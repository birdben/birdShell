#!/bin/bash
export ES_JAVA_OPTS="-Xmx512m -Xms512m"

RETVAL=0
SYS_USER="elk"
SYS_USER_ID="501"

ES_NAME="elasticsearch"
ES_DESC="Elasticsearch 2.3.5"
ES_PID_FOLDER="${ES_HOME}/es_pid"
ES_PID_FILE="${ES_PID_FOLDER}/${ES_NAME}.pid"
ES_LOG_FOLDER="${ES_HOME}/logs"

# 限制启动用户
if [ `id -u` -ne "${SYS_USER_ID}" ]; then
    echo "You need ${SYS_USER} privileges to run this script"
    exit 1
fi

start() {
    status
    RETVAL=$?
    if [ $RETVAL -eq 0 ]; then
        echo "${ES_NAME} is already running"
        exit $RETVAL
    fi

    echo "Starting ${ES_DESC} : "
    if [ ! -d "${ES_PID_FOLDER}" ] ; then
        mkdir -p ${ES_PID_FOLDER}
    fi
    if [ ! -d "${ES_LOG_FOLDER}" ] ; then
        mkdir -p ${ES_LOG_FOLDER}
    fi

    cd ${ES_HOME}/bin
    elasticsearch -p ${ES_PID_FILE} -d
    sleep 3
    PID=`cat "${ES_PID_FILE}"`
    echo "${ES_NAME} started. PID:$PID" 
    return 0 
}

stop() {
    echo "Stopping ${ES_DESC} : "
    if status ; then
    PID=`cat "${ES_PID_FILE}"`
    echo "Killing ${ES_NAME} (PID:$PID) with SIGTERM"
    kill -TERM $PID >/dev/null 2>&1
    sleep 1
    if status && sleep 1 ; then
        echo "${ES_NAME} stop failed; still running. Will force kill ${ES_NAME}"
        kill -KILL $PID >/dev/null 2>&1
        sleep 1
        if status && sleep 1 ; then
        	echo "${ES_NAME} stop failed; still running." 
        else
            echo "${ES_NAME} stopped."
            rm -f ${ES_PID_FILE}
        fi
    else
        echo "${ES_NAME} stopped."
        rm -f ${ES_PID_FILE}
    fi
  fi
}

status() {
    if [ -f "${ES_PID_FILE}" ] ; then
        PID=`cat "${ES_PID_FILE}"`
        if kill -0 $PID > /dev/null 2> /dev/null ; then
            return 0
        else
        	# program is dead but pid file exists
            return 2
        fi
    else
    	# program is not running
        return 3
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        RETVAL=$?
        if [ $RETVAL -eq 0 ] ; then
            PID=`cat "${ES_PID_FILE}"`
            echo "${ES_NAME} is running. PID:$PID"
        else
            echo "${ES_NAME} is not running"
        fi
        exit $RETVAL
        ;;
    restart)
        stop && start
        ;;
    *)
        # Invalid Arguments, print the following message.
        echo "Usage: $0 {start|stop|status|restart}" >&2
        exit 2
        ;;
esac
